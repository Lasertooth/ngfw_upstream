From 308ac4fd48e7111c64a77d63893bef03df07dec5 Mon Sep 17 00:00:00 2001
From: Brett Mastbergen <bmastbergen@untangle.com>
Date: Thu, 17 May 2018 11:17:42 -0400
Subject: [PATCH 1/2] nftables Add ct id

---
 include/datatype.h                  |  2 ++
 include/linux/netfilter/nf_tables.h |  1 +
 src/ct.c                            |  2 ++
 src/datatype.c                      | 10 ++++++++++
 src/parser_bison.y                  |  1 +
 5 files changed, 16 insertions(+)

diff --git a/include/datatype.h b/include/datatype.h
index 9f127f2..5733dab 100644
--- a/include/datatype.h
+++ b/include/datatype.h
@@ -82,6 +82,7 @@ enum datatypes {
 	TYPE_DSCP,
 	TYPE_ECN,
 	TYPE_FIB_ADDR,
+	TYPE_KEY,
 	__TYPE_MAX
 };
 #define TYPE_MAX		(__TYPE_MAX - 1)
@@ -215,6 +216,7 @@ extern const struct datatype invalid_type;
 extern const struct datatype verdict_type;
 extern const struct datatype nfproto_type;
 extern const struct datatype bitmask_type;
+extern const struct datatype key_type;
 extern const struct datatype integer_type;
 extern const struct datatype string_type;
 extern const struct datatype lladdr_type;
diff --git a/include/linux/netfilter/nf_tables.h b/include/linux/netfilter/nf_tables.h
index f030e59..bba198e 100644
--- a/include/linux/netfilter/nf_tables.h
+++ b/include/linux/netfilter/nf_tables.h
@@ -863,6 +863,7 @@ enum nft_ct_keys {
 	NFT_CT_LABELS,
 	NFT_CT_PKTS,
 	NFT_CT_BYTES,
+	NFT_CT_ID,
 };
 
 /**
diff --git a/src/ct.c b/src/ct.c
index d079289..541c564 100644
--- a/src/ct.c
+++ b/src/ct.c
@@ -232,6 +232,8 @@ static const struct ct_template ct_templates[] = {
 					      BYTEORDER_HOST_ENDIAN, 64),
 	[NFT_CT_PKTS]		= CT_TEMPLATE("packets", &integer_type,
 					      BYTEORDER_HOST_ENDIAN, 64),
+	[NFT_CT_ID]		= CT_TEMPLATE("id", &key_type,
+					      BYTEORDER_HOST_ENDIAN, 32),
 };
 
 static void ct_expr_print(const struct expr *expr)
diff --git a/src/datatype.c b/src/datatype.c
index f5f4f3a..bee711b 100644
--- a/src/datatype.c
+++ b/src/datatype.c
@@ -48,6 +48,7 @@ static const struct datatype *datatypes[TYPE_MAX + 1] = {
 	[TYPE_ICMP_CODE]	= &icmp_code_type,
 	[TYPE_ICMPV6_CODE]	= &icmpv6_code_type,
 	[TYPE_ICMPX_CODE]	= &icmpx_code_type,
+	[TYPE_KEY]		= &key_type,
 };
 
 void datatype_register(const struct datatype *dtype)
@@ -292,6 +293,15 @@ const struct datatype bitmask_type = {
 	.basetype	= &integer_type,
 };
 
+const struct datatype key_type = {
+	.type		= TYPE_KEY,
+	.name		= "key",
+	.desc		= "key",
+	.basefmt	= "%d",
+	.size		= 4 * BITS_PER_BYTE,
+	.basetype	= &integer_type,
+};
+
 static void integer_type_print(const struct expr *expr)
 {
 	const struct datatype *dtype = expr->dtype;
diff --git a/src/parser_bison.y b/src/parser_bison.y
index deaaf06..e6cfc54 100644
--- a/src/parser_bison.y
+++ b/src/parser_bison.y
@@ -2687,6 +2687,7 @@ ct_expr			: 	CT	ct_key
 ct_key			:	L3PROTOCOL	{ $$ = NFT_CT_L3PROTOCOL; }
 			|	PROTOCOL	{ $$ = NFT_CT_PROTOCOL; }
 			|	MARK		{ $$ = NFT_CT_MARK; }
+			|	ID		{ $$ = NFT_CT_ID; }
 			|	ct_key_counters
 			;
 ct_key_dir		:	SADDR		{ $$ = NFT_CT_SRC; }
-- 
2.11.0

