#!/bin/sh
### BEGIN INIT INFO
# Provides:          clamav-milter
# Required-Start:    $syslog
# Should-Start:      clamav-daemon
# Required-Stop:
# Should-Stop:       
# Default-Start:     2 3 4 5
# Default-Stop:      0 6
# Short-Description: ClamAV virus milter
# Description:       Clam AntiVirus milter interface
### END INIT INFO

# edit /etc/default/clamav-milter for options

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/clamav-milter
DESC="Sendmail milter plugin for ClamAV"
BASENAME=clamav-milter
CLAMAVCONF=/etc/clamav/clamd.conf
DEFAULT=/etc/default/clamav-milter
OPTIONS="-dq"
SUPERVISOR=/usr/bin/daemon
SUPERVISORPIDFILE="/var/run/clamav/daemon-clamav-milter.pid"
SUPERVISORARGS="-F $SUPERVISORPIDFILE --name=$BASENAME --respawn"
CLAMAVDAEMONUPGRADE="/var/run/clamav-daemon-being-upgraded"

[ -x "$DAEMON" ] || exit 0
[ -r "$CLAMAVCONF" ] || exit 0
[ -r "$DEFAULT" ] && . $DEFAULT
[ -z "$PIDFILE" ] && PIDFILE=/var/run/clamav/clamav-milter.pid
[ -z "$SOCKET" ] && SOCKET=local:/var/run/clamav/clamav-milter.ctl

. /lib/lsb/init-functions

#COMMON-FUNCTIONS#

slurp_config "$CLAMAVCONF"

case "$SOCKET" in
  /*)
  SOCKET_PATH="$SOCKET"
  SOCKET="local:$SOCKET"
  ;;
  *)
  SOCKET_PATH=`echo $SOCKET | sed -e s/local\://`
  # If the socket is type inet: we don't care - we can't rm -f that later :)
  ;;
esac

if is_true "$Foreground"; then
  if [ ! -x "$SUPERVISOR" ] ; then
     log_failure_msg "Foreground specified, but $SUPERVISOR not found"
     exit 0
  else
     RUN_SUPERVISED=1
     SUPERVISOR_EXEC="$DAEMON $OPTIONS --pidfile $PIDFILE $SOCKET"
  fi
fi

if [ -z "$RUN_SUPERVISED" ] ; then
  if [ -f "$PIDFILE" ]; then
    PID=`pidofproc -p $PIDFILE $DAEMON`
    RUNNING=$?
  else
    PID=`pidofproc $DAEMON`
    RUNNING=$?
  fi
else
  [ -e "$SUPERVISORPIDFILE" ] && PID=`sed 's/[^0-9]//g' $SUPERVISORPIDFILE`
fi

[ "$PID" = '1' ] && unset PID
[ -n "$User" ] || User=clamav
[ -n "$DataBaseDirectory" ] || DataBaseDirectory=/var/run/clamav

make_dir "$DataBaseDirectory"
make_dir $(dirname "$SOCKET_PATH")

case "$1" in
  start)
  OPTIND=1
  if [ -n "$PID" ]; then
    PID=`echo $PID | sed 's/[^0-9]//g'`
    if kill -0 $PID; then
      log_failure_msg "$DAEMON already running"
      exit 1
    fi
  fi
  if [ -e "$CLAMAVDAEMONUPGRADE" ] && [ "$RESTART_AFTER_CLAMD" = 'yes' ]; then
    touch $CLAMAVDAEMONUPGRADE.milter-restart
    log_warning_msg "clamd may be required to run $DAEMON, clamav-milter will be restarted by clamav-daemon"
    exit 0
  fi
  if [ -z "$RUN_SUPERVISED" ] ; then
    log_daemon_msg "Starting $DESC" "$BASENAME"
    su "$User" -p -s /bin/sh -c ". /lib/lsb/init-functions && start_daemon $DAEMON $OPTIONS --pidfile $PIDFILE $SOCKET" > /dev/null
    ret=$?
  else
    log_daemon_msg "Starting $DESC" "$BASENAME (supervised)"
    $SUPERVISOR $SUPERVISORARGS -X "$SUPERVISOR_EXEC"
    ret=$?
  fi
  if [ $ret = 0 ] && [ "$USE_POSTFIX" = 'yes' ] && [ "${SOCKET_PATH#inet}" = "${SOCKET_PATH}" ]; then
    cnt=0
    until [ -e "$SOCKET_PATH" ] ; do
      cnt=`expr "$cnt" + 1`
      if [ "$cnt" -gt 15 ]; then
        break
      fi
      sleep 2
    done
    if [ -e "$SOCKET_PATH" ]; then
      chmod g+w $SOCKET_PATH
      chgrp postfix $SOCKET_PATH
    else
      log_warning_msg "Socket not created.  Investigate"
    fi
  fi
  log_end_msg $ret
  ;;
  stop)
  OPTIND=1
  log_daemon_msg "Stopping $DESC" "$BASENAME"
  if [ -n "$PID" ]; then
    PID=`echo $PID | sed 's/[^0-9]//g'`
    kill -15 -"$PID" 2>/dev/null || true
    ret=$?
    sleep 2
    if kill -0 "$PID" 2>/dev/null; then 
      ret=$?
      log_progress_msg "Waiting . "
      cnt=0
      while kill -0 "$PID" 2>/dev/null; do
        ret=$?
        cnt=`expr "$cnt" + 1`
        if [ "$cnt" -gt 15 ]; then
          kill -9 -"$PID"
          ret=$?
          break
        fi
        sleep 2
        log_progress_msg ". "
      done
    fi
  else
    if [ -z "$RUN_SUPERVISED" ] ; then
      killproc -p $PIDFILE $DAEMON
      ret=$?
    else
      killproc -p $SUPERVISORPIDFILE
      ret=$?
    fi
  fi
  if [ -n "$ret" ]; then
    log_end_msg $ret
  else
    log_end_msg $?
  fi
  [ -e "$SOCKET_PATH" ] && rm -f $SOCKET_PATH
  [ -e "$PIDFILE" ] && rm -f $PIDFILE
  ;;
  force-reload | restart)
  $0 stop
  sleep 2
  $0 start
  ;;
  status)
  status_of_proc "$DAEMON" "$NAME"
  exit $?
  ;;
  *)
  log_failure_msg "Usage: $0 {start|stop|restart|force-reload|status}" >&2
  exit 1
  ;;
esac

exit 0
